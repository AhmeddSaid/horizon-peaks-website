- Horizon Peaks Customer Website :-
  - Project Requirements :-
    1- User of the app are potential guests and actual guests.
    2- Guests should be able to learn all about the Horizon Peaks Hotel.
    3- Guests should be able to get information about each cabin and see booked dates.
    4- Guests should be able to filter cabins by their maximum guest capacity.
    5- Guests should be able to reserve a cabin for a certain date range.
    6- Reservations are not paid online. Payments will be made at the property
       upon arrival. Therefore, new reservations should be set to "unconfirmed"
       (booked but not yet checked in).
    7- Guests should be able to view all their past and future reservations.
    8- Guests should be abke to update or delete a reservation.
    9- Guests need to sign up and log in before they can reserve a cabin and 
       perform any operation.
    10- On sign upm each guest should get a profile in the DB.
    11- Guests should be able to set and update basic data about their profile to
      make check-in at the hotel faster.

    - Categorize Requirements :-
      1- [2] -> About.
      2- [3-4] -> Cabins.
      3- [5-8] -> Reservations.
      4- [9-10] -> Authentication.
      5- [11] -> Profile.
    
    - Necessary Pages :-
      1- Homepage -> /
      2- About Page -> /about
      3- Cabin overview -> /cabins
      4- Cabin detail -> /cabins/:cabinId
      5- Login -> /login
      6- Reservation List -> /account/reservations
      7- Edit Reservation -> /account/reservations/edit
      8- Update profile -> /account/profile

  - Technology Decisions :-
    1- Framework -> Nextjs
      - The most popular React meta-framework.
        Handles routing, SSR, data fetching and
        even remote state management (in a way...),
        therefore replacing many tools we had to include before.
    2- UI State management -> Context API
      - We might still need global UI state in a Next.js app.
        For that, we can use the Context API, Redux, or any other solutions.
        In this case the Context API will be enough.
    3- DB/API -> Supabase
      - We'll use the data and API we already built in the first "Horizon Peaks Dashboard" project.
    4- Styling -> TailwindCSS
      - Modern way of writing CSS, Extremely easy to integrate into Next.js
        Most styles and markup will be pre-written anyway in this project.